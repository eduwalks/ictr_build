{"version":3,"sources":["sections/apps/calendar/CalendarStyled.js","sections/apps/calendar/Toolbar.js","components/@extended/Avatar.js","sections/apps/calendar/ColorPalette.js","sections/apps/calendar/AddEventForm.js","pages/apps/calendar.js"],"names":["ExperimentalStyled","styled","theme","width","marginLeft","marginBottom","display","overflow","palette","divider","primary","lighter","dark","error","main","color","text","backgroundColor","background","paper","fontFamily","typography","textAlign","marginTop","grey","padding","borderRadius","border","paddingLeft","borderBottomLeftRadius","borderBottomRightRadius","borderTopLeftRadius","borderTopRightRadius","cursor","margin","viewOptions","label","value","icon","AppstoreOutlined","LayoutOutlined","PicCenterOutlined","OrderedListOutlined","Toolbar","date","view","onClickNext","onClickPrev","onClickToday","onChangeView","others","matchDownSM","useMediaQuery","breakpoints","down","useState","viewFilter","setViewFilter","useEffect","filter","item","Grid","alignItems","container","justifyContent","spacing","sx","pb","Button","variant","onClick","size","ButtonGroup","map","viewOption","Icon","Tooltip","title","disableElevation","style","fontSize","Stack","direction","IconButton","LeftOutlined","Typography","format","RightOutlined","AvatarStyle","MuiAvatar","shouldForwardProp","prop","type","height","getSizeStyle","colors","getColors","light","contrastText","borderColor","getColorStyle","default","Avatar","children","useTheme","ColorPalette","FormControlLabel","control","Radio","disableRipple","Box","checkedIcon","CheckOutlined","bgcolor","getInitialValues","event","range","newEvent","description","textColor","allDay","start","Date","end","_","merge","AddEventFrom","onCancel","dispatch","useDispatch","isCreating","success","secondary","warning","EventSchema","Yup","shape","max","required","when","schema","min","formik","useFormik","initialValues","validationSchema","onSubmit","values","setSubmitting","updateEvent","id","openSnackbar","open","message","alert","close","createEvent","console","errors","touched","handleSubmit","isSubmitting","getFieldProps","setFieldValue","LocalizationProvider","dateAdapter","AdapterDateFns","autoComplete","noValidate","DialogTitle","Divider","DialogContent","p","xs","InputLabel","htmlFor","TextField","fullWidth","placeholder","Boolean","helperText","multiline","rows","Switch","checked","md","MobileDateTimePicker","inputFormat","onChange","renderInput","params","InputProps","endAdornment","InputAdornment","position","CalendarOutlined","FormControl","RadioGroup","row","e","target","name","mr","index","component","DialogActions","placement","deleteEvent","DeleteFilled","disabled","selectedEventHandler","state","calendar","events","selectedEventId","find","Calendar","useSelector","calendarView","isModalOpen","selectedRange","selectedEvent","getEvents","calendarRef","useRef","calendarEl","current","calendarApi","getApi","newView","changeView","updateCalendarView","setDate","handleEventUpdate","a","handleModal","toggleModal","CalendarStyled","next","getDate","prev","today","weekends","editable","droppable","selectable","ref","rerenderDelay","initialDate","initialView","dayMaxEventRows","eventDisplay","headerToolbar","allDayMaintainDuration","eventResizableFromStart","select","arg","unselect","selectRange","eventDrop","eventClick","selectEvent","eventResize","fixedWeekCount","locale","plugins","listPlugin","dayGridPlugin","timelinePlugin","timeGridPlugin","interactionPlugin","Dialog","maxWidth","onClose","AddEventForm","SpeedDial","ariaLabel","bottom","left","transform","PlusOutlined"],"mappings":"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","file":"static/js/1.74d65148.chunk.js","sourcesContent":["// material-ui\nimport { styled } from '@mui/material/styles';\n\n// ==============================|| CALENDAR - STYLED ||============================== //\n\nconst ExperimentalStyled = styled('div')(({ theme }) => ({\n  width: 'calc(100% + 2px)',\n  marginLeft: -1,\n  marginBottom: '-50px',\n\n  // hide license message\n  '& .fc-license-message': {\n    display: 'none'\n  },\n  '& .fc .fc-daygrid .fc-scroller-liquid-absolute': {\n    overflow: 'hidden !important'\n  },\n\n  // basic style\n  '& .fc': {\n    '--fc-bg-event-opacity': 1,\n    '--fc-border-color': theme.palette.divider,\n    '--fc-daygrid-event-dot-width': '10px',\n    '--fc-today-bg-color': theme.palette.primary.lighter,\n    '--fc-list-event-dot-width': '10px',\n    '--fc-event-border-color': theme.palette.primary.dark,\n    '--fc-now-indicator-color': theme.palette.error.main,\n    color: theme.palette.text.primary,\n    backgroundColor: theme.palette.background.paper,\n    fontFamily: theme.typography.fontFamily\n  },\n\n  // date text\n  '& .fc .fc-daygrid-day-top': {\n    display: 'grid',\n    '& .fc-daygrid-day-number': {\n      textAlign: 'center',\n      marginTop: 12,\n      marginBottom: 12\n    }\n  },\n\n  // weekday\n  '& .fc .fc-col-header-cell': {\n    backgroundColor: theme.palette.grey[100]\n  },\n\n  '& .fc .fc-col-header-cell-cushion': {\n    color: theme.palette.grey[900],\n    padding: 16\n  },\n\n  // events\n  '& .fc-direction-ltr .fc-daygrid-event.fc-event-end, .fc-direction-rtl .fc-daygrid-event.fc-event-start': {\n    marginLeft: 4,\n    marginBottom: 6,\n    borderRadius: 4,\n    backgroundColor: theme.palette.primary.main,\n    border: 'none'\n  },\n\n  '& .fc-h-event .fc-event-main': {\n    padding: 4,\n    paddingLeft: 8\n  },\n\n  // popover when multiple events\n  '& .fc .fc-more-popover': {\n    border: 'none',\n    borderRadius: 6\n  },\n\n  '& .fc .fc-more-popover .fc-popover-body': {\n    backgroundColor: theme.palette.grey[200],\n    borderBottomLeftRadius: 4,\n    borderBottomRightRadius: 4\n  },\n\n  '& .fc .fc-popover-header': {\n    padding: 12,\n    borderTopLeftRadius: 4,\n    borderTopRightRadius: 4,\n    backgroundColor: theme.palette.grey[200],\n    color: theme.palette.text.primary\n  },\n\n  // agenda view\n  '& .fc-theme-standard .fc-list-day-cushion': {\n    backgroundColor: theme.palette.grey[100]\n  },\n\n  '& .fc .fc-day': {\n    cursor: 'pointer'\n  },\n\n  '& .fc .fc-timeGridDay-view .fc-timegrid-slot': {\n    backgroundColor: theme.palette.background.paper\n  },\n\n  '& .fc .fc-timegrid-slot': {\n    cursor: 'pointer'\n  },\n\n  '& .fc .fc-list-event:hover td': {\n    cursor: 'pointer',\n    backgroundColor: theme.palette.grey[100]\n  },\n\n  '& .fc-timegrid-event-harness-inset .fc-timegrid-event, .fc-timegrid-event.fc-event-mirror, .fc-timegrid-more-link': {\n    padding: 8,\n    margin: 2\n  }\n}));\n\nexport default ExperimentalStyled;\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\n\n// material-ui\nimport { useMediaQuery, Button, ButtonGroup, Grid, Stack, Tooltip, Typography } from '@mui/material';\n\n// third-party\nimport { format } from 'date-fns';\n\n// project import\nimport IconButton from 'components/@extended/IconButton';\n\n// assets\nimport { AppstoreOutlined, LayoutOutlined, LeftOutlined, OrderedListOutlined, PicCenterOutlined, RightOutlined } from '@ant-design/icons';\n\n// constant\nconst viewOptions = [\n  {\n    label: '월',\n    value: 'dayGridMonth',\n    icon: AppstoreOutlined\n  },\n  {\n    label: '주',\n    value: 'timeGridWeek',\n    icon: LayoutOutlined\n  },\n  {\n    label: '일',\n    value: 'timeGridDay',\n    icon: PicCenterOutlined\n  },\n  {\n    label: '목록',\n    value: 'listWeek',\n    icon: OrderedListOutlined\n  }\n];\n\n// ==============================|| CALENDAR - TOOLBAR ||============================== //\n\nconst Toolbar = ({ date, view, onClickNext, onClickPrev, onClickToday, onChangeView, ...others }) => {\n  const matchDownSM = useMediaQuery((theme) => theme.breakpoints.down('sm'));\n\n  const [viewFilter, setViewFilter] = useState(viewOptions);\n\n  useEffect(() => {\n    if (matchDownSM) {\n      const filter = viewOptions.filter((item) => item.value !== 'dayGridMonth' && item.value !== 'timeGridWeek');\n      setViewFilter(filter);\n    } else {\n      setViewFilter(viewOptions);\n    }\n  }, [matchDownSM]);\n\n  return (\n    <>\n      <Grid alignItems=\"center\" container justifyContent=\"space-between\" spacing={matchDownSM ? 1 : 3} {...others} sx={{ pb: 3 }}>\n        <Grid item>\n          <Button variant=\"outlined\" onClick={onClickToday} size={matchDownSM ? 'small' : 'medium'}>\n            오늘\n          </Button>\n        </Grid>\n        <Grid item>\n          <ButtonGroup variant=\"outlined\" aria-label=\"outlined button group\">\n            {viewFilter.map((viewOption) => {\n              const Icon = viewOption.icon;\n              return (\n                <Tooltip title={viewOption.label} key={viewOption.value}>\n                  <Button\n                    size={matchDownSM ? 'small' : 'medium'}\n                    disableElevation\n                    variant={viewOption.value === view ? 'contained' : 'outlined'}\n                    onClick={() => onChangeView(viewOption.value)}\n                  >\n                    <Icon style={{ fontSize: '1.3rem' }} />\n                  </Button>\n                </Tooltip>\n              );\n            })}\n          </ButtonGroup>\n        </Grid>\n      </Grid>\n\n      <div style={{textAlign:\"center\", marginBottom:\"10px\"}}>\n        <Stack style={{justifyContent:\"center\"}} direction=\"row\" alignItems=\"center\" spacing={matchDownSM ? 1 : 3}>\n          <IconButton onClick={onClickPrev} size={matchDownSM ? 'small' : 'large'}>\n            <LeftOutlined />\n          </IconButton>\n          <Typography variant={matchDownSM ? 'h5' : 'h3'} color=\"textPrimary\">\n            {format(date, 'yyyy년 MM월')}\n          </Typography>\n          <IconButton onClick={onClickNext} size={matchDownSM ? 'small' : 'large'}>\n            <RightOutlined />\n          </IconButton>\n        </Stack>\n      </div>\n    </>\n  );\n};\n\nToolbar.propTypes = {\n  date: PropTypes.object,\n  view: PropTypes.string,\n  onClickNext: PropTypes.func,\n  onClickPrev: PropTypes.func,\n  onClickToday: PropTypes.func,\n  onChangeView: PropTypes.func\n};\n\nexport default Toolbar;\n","import PropTypes from 'prop-types';\n\n// material-ui\nimport { styled, useTheme } from '@mui/material/styles';\nimport MuiAvatar from '@mui/material/Avatar';\n\n// project import\nimport getColors from 'utils/getColors';\n\n// ==============================|| AVATAR - COLOR STYLE ||============================== //\n\nfunction getColorStyle({ theme, color, type }) {\n  const colors = getColors(theme, color);\n  const { lighter, light, main, contrastText } = colors;\n\n  switch (type) {\n    case 'filled':\n      return {\n        color: contrastText,\n        backgroundColor: main\n      };\n    case 'outlined':\n      return {\n        color: main,\n        border: '1px solid',\n        borderColor: main,\n        backgroundColor: 'transparent'\n      };\n    case 'combined':\n      return {\n        color: main,\n        border: '1px solid',\n        borderColor: light,\n        backgroundColor: lighter\n      };\n    default:\n      return {\n        color: main,\n        backgroundColor: lighter\n      };\n  }\n}\n\n// ==============================|| AVATAR - SIZE STYLE ||============================== //\n\nfunction getSizeStyle(size) {\n  switch (size) {\n    case 'badge':\n      return {\n        border: '2px solid',\n        fontSize: '0.675rem',\n        width: 20,\n        height: 20\n      };\n    case 'xs':\n      return {\n        fontSize: '0.75rem',\n        width: 24,\n        height: 24\n      };\n    case 'sm':\n      return {\n        fontSize: '0.875rem',\n        width: 32,\n        height: 32\n      };\n    case 'lg':\n      return {\n        fontSize: '1.2rem',\n        width: 52,\n        height: 52\n      };\n    case 'xl':\n      return {\n        fontSize: '1.5rem',\n        width: 64,\n        height: 64\n      };\n    case 'md':\n    default:\n      return {\n        fontSize: '1rem',\n        width: 40,\n        height: 40\n      };\n  }\n}\n\n// ==============================|| STYLED - AVATAR ||============================== //\n\nconst AvatarStyle = styled(MuiAvatar, { shouldForwardProp: (prop) => prop !== 'color' && prop !== 'type' && prop !== 'size' })(\n  ({ theme, variant, color, type, size }) => ({\n    ...getSizeStyle(size),\n    ...getColorStyle({ variant, theme, color, type }),\n    ...(size === 'badge' && {\n      borderColor: theme.palette.background.default\n    })\n  })\n);\n\n// ==============================|| EXTENDED - AVATAR ||============================== //\n\nexport default function Avatar({ variant = 'circular', children, color = 'primary', type, size = 'md', ...others }) {\n  const theme = useTheme();\n\n  return (\n    <AvatarStyle variant={variant} theme={theme} color={color} type={type} size={size} {...others}>\n      {children}\n    </AvatarStyle>\n  );\n}\n\nAvatar.propTypes = {\n  children: PropTypes.node,\n  color: PropTypes.string,\n  type: PropTypes.string,\n  size: PropTypes.string,\n  variant: PropTypes.string\n};\n","import PropTypes from 'prop-types';\n\n// material-ui\nimport { Box, FormControlLabel, Radio, Tooltip } from '@mui/material';\n\n// project import\nimport Avatar from 'components/@extended/Avatar';\n\n// assets\nimport { CheckOutlined } from '@ant-design/icons';\n\n// ==============================|| CALENDAR - COLOR PALETTE ||============================== //\n\nconst ColorPalette = ({ color, value }) => (\n  <Tooltip title={color}>\n    <FormControlLabel\n      value={value}\n      label=\"\"\n      control={\n        <Radio\n          disableRipple\n          icon={\n            <Avatar variant=\"rounded\" type=\"combined\" size=\"xs\" sx={{ backgroundColor: color, borderColor: 'divider' }}>\n              <Box sx={{ display: 'none' }} />\n            </Avatar>\n          }\n          checkedIcon={\n            <Avatar variant=\"rounded\" type=\"combined\" size=\"xs\" sx={{ backgroundColor: color, color: '#000', borderColor: 'divider' }}>\n              <CheckOutlined />\n            </Avatar>\n          }\n          sx={{\n            '&:hover': {\n              bgcolor: 'transparent'\n            }\n          }}\n        />\n      }\n    />\n  </Tooltip>\n);\n\nColorPalette.propTypes = {\n  color: PropTypes.string,\n  value: PropTypes.string\n};\n\nexport default ColorPalette;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport {\n  Button,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Divider,\n  FormControl,\n  FormControlLabel,\n  Grid,\n  InputAdornment,\n  InputLabel,\n  RadioGroup,\n  Stack,\n  Switch,\n  TextField,\n  Tooltip,\n  Typography\n} from '@mui/material';\nimport { LocalizationProvider, MobileDateTimePicker } from '@mui/x-date-pickers';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\n\n// third-party\nimport _ from 'lodash';\nimport * as Yup from 'yup';\nimport { useFormik, Form, FormikProvider } from 'formik';\n\n// project imports\nimport ColorPalette from './ColorPalette';\nimport IconButton from 'components/@extended/IconButton';\nimport { openSnackbar } from 'store/reducers/snackbar';\nimport { createEvent, deleteEvent, updateEvent } from 'store/reducers/calendar';\n\n// assets\nimport { CalendarOutlined, DeleteFilled } from '@ant-design/icons';\n\n// constant\nconst getInitialValues = (event, range) => {\n  const newEvent = {\n    title: '',\n    description: '',\n    color: '#1890ff',\n    textColor: '#fff',\n    allDay: false,\n    start: range ? new Date(range.start) : new Date(),\n    end: range ? new Date(range.end) : new Date()\n  };\n\n  if (event || range) {\n    return _.merge({}, newEvent, event);\n  }\n\n  return newEvent;\n};\n\n// ==============================|| CALENDAR EVENT ADD / EDIT / DELETE ||============================== //\n\nconst AddEventFrom = ({ event, range, onCancel }) => {\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const isCreating = !event;\n\n  const backgroundColor = [\n    {\n      value: theme.palette.primary.main,\n      color: 'primary.main'\n    },\n    {\n      value: theme.palette.error.main,\n      color: 'error.main'\n    },\n    {\n      value: theme.palette.success.main,\n      color: 'success.main'\n    },\n    {\n      value: theme.palette.secondary.main,\n      color: 'secondary.main'\n    },\n    {\n      value: theme.palette.warning.main,\n      color: 'warning.main'\n    },\n    {\n      value: theme.palette.primary.lighter,\n      color: 'primary.lighter'\n    },\n    {\n      value: theme.palette.error.lighter,\n      color: 'error.lighter'\n    },\n    {\n      value: theme.palette.success.lighter,\n      color: 'success.lighter'\n    },\n    {\n      value: theme.palette.secondary.lighter,\n      color: 'secondary.lighter'\n    },\n    {\n      value: theme.palette.warning.lighter,\n      color: 'warning.lighter'\n    }\n  ];\n\n  const textColor = [\n    {\n      value: '#fff',\n      color: 'white'\n    },\n    {\n      value: theme.palette.error.lighter,\n      color: 'error.lighter'\n    },\n    {\n      value: theme.palette.success.lighter,\n      color: 'success.lighter'\n    },\n    {\n      value: theme.palette.secondary.lighter,\n      color: 'secondary.lighter'\n    },\n    {\n      value: theme.palette.warning.lighter,\n      color: 'warning.lighter'\n    },\n    {\n      value: theme.palette.primary.lighter,\n      color: 'primary.lighter'\n    },\n    {\n      value: theme.palette.primary.main,\n      color: 'primary.main'\n    },\n    {\n      value: theme.palette.error.main,\n      color: 'error.main'\n    },\n    {\n      value: theme.palette.success.main,\n      color: 'success.main'\n    },\n    {\n      value: theme.palette.secondary.main,\n      color: 'secondary.main'\n    },\n    {\n      value: theme.palette.warning.main,\n      color: 'warning.main'\n    }\n  ];\n\n  const EventSchema = Yup.object().shape({\n    title: Yup.string().max(255).required('Title is required'),\n    description: Yup.string().max(5000),\n    end: Yup.date().when('start', (start, schema) => start && schema.min(start, 'End date must be later than start date')),\n    start: Yup.date(),\n    color: Yup.string().max(255),\n    textColor: Yup.string().max(255)\n  });\n\n  const deleteHandler = () => {\n    dispatch(deleteEvent(event?.id));\n    dispatch(\n      openSnackbar({\n        open: true,\n        message: 'Event deleted successfully.',\n        variant: 'alert',\n        alert: {\n          color: 'success'\n        },\n        close: false\n      })\n    );\n  };\n\n  const formik = useFormik({\n    initialValues: getInitialValues(event, range),\n    validationSchema: EventSchema,\n    onSubmit: (values, { setSubmitting }) => {\n      try {\n        const newEvent = {\n          title: values.title,\n          description: values.description,\n          color: values.color,\n          textColor: values.textColor,\n          allDay: values.allDay,\n          start: values.start,\n          end: values.end\n        };\n\n        if (event) {\n          dispatch(updateEvent(event.id, newEvent));\n          dispatch(\n            openSnackbar({\n              open: true,\n              message: 'Event update successfully.',\n              variant: 'alert',\n              alert: {\n                color: 'success'\n              },\n              close: false\n            })\n          );\n        } else {\n          dispatch(createEvent(newEvent));\n          dispatch(\n            openSnackbar({\n              open: true,\n              message: 'Event add successfully.',\n              variant: 'alert',\n              alert: {\n                color: 'success'\n              },\n              close: false\n            })\n          );\n        }\n\n        setSubmitting(false);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  });\n\n  const { values, errors, touched, handleSubmit, isSubmitting, getFieldProps, setFieldValue } = formik;\n\n  return (\n    <FormikProvider value={formik}>\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\n        <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\n          <DialogTitle>{event ? 'Edit Event' : 'Add Event'}</DialogTitle>\n          <Divider />\n          <DialogContent sx={{ p: 2.5 }}>\n            <Grid container spacing={3}>\n              <Grid item xs={12}>\n                <Stack spacing={1.25}>\n                  <InputLabel htmlFor=\"cal-title\">Title</InputLabel>\n                  <TextField\n                    fullWidth\n                    id=\"cal-title\"\n                    placeholder=\"Title\"\n                    {...getFieldProps('title')}\n                    error={Boolean(touched.title && errors.title)}\n                    helperText={touched.title && errors.title}\n                  />\n                </Stack>\n              </Grid>\n              <Grid item xs={12}>\n                <Stack spacing={1.25}>\n                  <InputLabel htmlFor=\"cal-description\">Description</InputLabel>\n                  <TextField\n                    fullWidth\n                    id=\"cal-description\"\n                    multiline\n                    rows={3}\n                    placeholder=\"Description\"\n                    {...getFieldProps('description')}\n                    error={Boolean(touched.description && errors.description)}\n                    helperText={touched.description && errors.description}\n                  />\n                </Stack>\n              </Grid>\n              <Grid item xs={12}>\n                <FormControlLabel control={<Switch checked={values.allDay} {...getFieldProps('allDay')} />} label=\"All day\" />\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <Stack spacing={1.25}>\n                  <InputLabel htmlFor=\"cal-start-date\">Start Date</InputLabel>\n                  <MobileDateTimePicker\n                    value={values.start}\n                    inputFormat=\"dd/MM/yyyy hh:mm a\"\n                    onChange={(date) => setFieldValue('start', date)}\n                    renderInput={(params) => (\n                      <TextField\n                        {...params}\n                        id=\"cal-start-date\"\n                        placeholder=\"Start date\"\n                        fullWidth\n                        InputProps={{\n                          endAdornment: (\n                            <InputAdornment position=\"end\">\n                              <CalendarOutlined />\n                            </InputAdornment>\n                          )\n                        }}\n                      />\n                    )}\n                  />\n                </Stack>\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <Stack spacing={1.25}>\n                  <InputLabel htmlFor=\"cal-end-date\">End Date</InputLabel>\n                  <MobileDateTimePicker\n                    value={values.end}\n                    inputFormat=\"dd/MM/yyyy hh:mm a\"\n                    onChange={(date) => setFieldValue('end', date)}\n                    renderInput={(params) => (\n                      <TextField\n                        {...params}\n                        id=\"cal-end-date\"\n                        placeholder=\"End date\"\n                        fullWidth\n                        error={Boolean(touched.end && errors.end)}\n                        helperText={touched.end && errors.end}\n                        InputProps={{\n                          endAdornment: (\n                            <InputAdornment position=\"end\">\n                              <CalendarOutlined />\n                            </InputAdornment>\n                          )\n                        }}\n                      />\n                    )}\n                  />\n                </Stack>\n              </Grid>\n              <Grid item xs={12}>\n                <Grid container spacing={2}>\n                  <Grid item xs={12}>\n                    <Typography variant=\"subtitle1\">Background Color</Typography>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <FormControl>\n                      <RadioGroup\n                        row\n                        aria-label=\"color\"\n                        {...getFieldProps('color')}\n                        onChange={(e) => setFieldValue('color', e.target.value)}\n                        name=\"color-radio-buttons-group\"\n                        sx={{ '& .MuiFormControlLabel-root': { mr: 2 } }}\n                      >\n                        {backgroundColor.map((item, index) => (\n                          <ColorPalette key={index} value={item.value} color={item.color} />\n                        ))}\n                      </RadioGroup>\n                    </FormControl>\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item xs={12}>\n                <Grid container spacing={2}>\n                  <Grid item xs={12}>\n                    <Typography variant=\"subtitle1\">Text Color</Typography>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <FormControl component=\"fieldset\">\n                      <RadioGroup\n                        row\n                        aria-label=\"textColor\"\n                        {...getFieldProps('textColor')}\n                        onChange={(e) => setFieldValue('textColor', e.target.value)}\n                        name=\"text-color-radio-buttons-group\"\n                        sx={{ '& .MuiFormControlLabel-root': { mr: 2 } }}\n                      >\n                        {textColor.map((item, index) => (\n                          <ColorPalette key={index} value={item.value} color={item.color} />\n                        ))}\n                      </RadioGroup>\n                    </FormControl>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </DialogContent>\n          <Divider />\n          <DialogActions sx={{ p: 2.5 }}>\n            <Grid container justifyContent=\"space-between\" alignItems=\"center\">\n              <Grid item>\n                {!isCreating && (\n                  <Tooltip title=\"Delete Event\" placement=\"top\">\n                    <IconButton onClick={deleteHandler} size=\"large\" color=\"error\">\n                      <DeleteFilled />\n                    </IconButton>\n                  </Tooltip>\n                )}\n              </Grid>\n              <Grid item>\n                <Stack direction=\"row\" spacing={2} alignItems=\"center\">\n                  <Button color=\"error\" onClick={onCancel}>\n                    Cancel\n                  </Button>\n                  <Button type=\"submit\" variant=\"contained\" disabled={isSubmitting}>\n                    {event ? 'Edit' : 'Add'}\n                  </Button>\n                </Stack>\n              </Grid>\n            </Grid>\n          </DialogActions>\n        </Form>\n      </LocalizationProvider>\n    </FormikProvider>\n  );\n};\n\nAddEventFrom.propTypes = {\n  event: PropTypes.object,\n  range: PropTypes.object,\n  onCancel: PropTypes.func\n};\n\nexport default AddEventFrom;\n","import { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\n// material-ui\nimport { useMediaQuery, Box, Dialog, SpeedDial, Tooltip } from '@mui/material';\n\n// third-party\nimport FullCalendar from '@fullcalendar/react';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport listPlugin from '@fullcalendar/list';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport timelinePlugin from '@fullcalendar/timeline';\n\n// project import\nimport CalendarStyled from 'sections/apps/calendar/CalendarStyled';\nimport Toolbar from 'sections/apps/calendar/Toolbar';\nimport AddEventForm from 'sections/apps/calendar/AddEventForm';\nimport { getEvents, selectEvent, selectRange, toggleModal, updateCalendarView, updateEvent } from 'store/reducers/calendar';\n\n// assets\nimport { PlusOutlined } from '@ant-design/icons';\n\nconst selectedEventHandler = (state) => {\n  const { events, selectedEventId } = state.calendar;\n  if (selectedEventId) {\n    return events.find((event) => event.id === selectedEventId);\n  }\n  return null;\n};\n\n// ==============================|| CALENDAR - MAIN ||============================== //\n\nconst Calendar = () => {\n  const matchDownSM = useMediaQuery((theme) => theme.breakpoints.down('sm'));\n  const dispatch = useDispatch();\n  const calendar = useSelector((state) => state.calendar);\n  const { calendarView, events, isModalOpen, selectedRange } = calendar;\n  const selectedEvent = useSelector(selectedEventHandler);\n\n  useEffect(() => {\n    dispatch(getEvents());\n  }, [dispatch]);\n\n  const calendarRef = useRef(null);\n\n  useEffect(() => {\n    const calendarEl = calendarRef.current;\n    if (calendarEl) {\n      const calendarApi = calendarEl.getApi();\n      const newView = matchDownSM ? 'listWeek' : 'dayGridMonth';\n      calendarApi.changeView(newView);\n      dispatch(updateCalendarView(newView));\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [matchDownSM]);\n\n  const [date, setDate] = useState(new Date());\n\n  // calendar toolbar events\n  const handleDateToday = () => {\n    const calendarEl = calendarRef.current;\n\n    if (calendarEl) {\n      const calendarApi = calendarEl.getApi();\n\n      calendarApi.today();\n      setDate(calendarApi.getDate());\n    }\n  };\n\n  const handleViewChange = (newView) => {\n    const calendarEl = calendarRef.current;\n\n    if (calendarEl) {\n      const calendarApi = calendarEl.getApi();\n\n      calendarApi.changeView(newView);\n      dispatch(updateCalendarView(newView));\n    }\n  };\n\n  const handleDatePrev = () => {\n    const calendarEl = calendarRef.current;\n\n    if (calendarEl) {\n      const calendarApi = calendarEl.getApi();\n\n      calendarApi.prev();\n      setDate(calendarApi.getDate());\n    }\n  };\n\n  const handleDateNext = () => {\n    const calendarEl = calendarRef.current;\n\n    if (calendarEl) {\n      const calendarApi = calendarEl.getApi();\n\n      calendarApi.next();\n      setDate(calendarApi.getDate());\n    }\n  };\n\n  // calendar events\n  const handleRangeSelect = (arg) => {\n    const calendarEl = calendarRef.current;\n    if (calendarEl) {\n      const calendarApi = calendarEl.getApi();\n      calendarApi.unselect();\n    }\n\n    dispatch(selectRange(arg.start, arg.end));\n  };\n\n  const handleEventSelect = (arg) => {\n    dispatch(selectEvent(arg.event.id));\n  };\n\n  const handleEventUpdate = async ({ event }) => {\n    try {\n      dispatch(\n        updateEvent(event.id, {\n          allDay: event.allDay,\n          start: event.start,\n          end: event.end\n        })\n      );\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleModal = () => {\n    dispatch(toggleModal());\n  };\n\n  return (\n    <Box sx={{ position: 'relative', padding: '10px;' }}>\n      <CalendarStyled>\n        <Toolbar\n          date={date}\n          view={calendarView}\n          onClickNext={handleDateNext}\n          onClickPrev={handleDatePrev}\n          onClickToday={handleDateToday}\n          onChangeView={handleViewChange}\n        />\n\n        <FullCalendar\n          weekends\n          editable\n          droppable\n          selectable\n          events={events}\n          ref={calendarRef}\n          rerenderDelay={10}\n          initialDate={date}\n          initialView={calendarView}\n          dayMaxEventRows={3}\n          eventDisplay=\"block\"\n          headerToolbar={false}\n          allDayMaintainDuration\n          eventResizableFromStart\n          select={handleRangeSelect}\n          eventDrop={handleEventUpdate}\n          eventClick={handleEventSelect}\n          eventResize={handleEventUpdate}\n          fixedWeekCount={false}\n          height={matchDownSM ? 'auto' : 720}\n          locale=\"ko\"\n          plugins={[listPlugin, dayGridPlugin, timelinePlugin, timeGridPlugin, interactionPlugin]}\n        />\n      </CalendarStyled>\n\n      {/* Dialog renders its body even if not open */}\n      <Dialog maxWidth=\"sm\" fullWidth onClose={handleModal} open={isModalOpen} sx={{ '& .MuiDialog-paper': { p: 0 } }}>\n        {isModalOpen && <AddEventForm event={selectedEvent} range={selectedRange} onCancel={handleModal} />}\n      </Dialog>\n      <Tooltip title=\"Add New Event\">\n        <SpeedDial\n          ariaLabel=\"add-event-fab\"\n          sx={{ display: 'inline-flex', position: 'sticky', bottom: 24, left: '100%', transform: 'translate(-50%, -50% )' }}\n          icon={<PlusOutlined style={{ fontSize: '1.5rem' }} />}\n          onClick={handleModal}\n        />\n      </Tooltip>\n    </Box>\n  );\n};\n\nexport default Calendar;\n"],"sourceRoot":""}